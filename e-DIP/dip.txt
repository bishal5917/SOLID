
DEPENDENCY INVERSION PRINCIPLE

This principle states that the high level module should not depend upon low level modules
They both should depend upon abstractions.Abstractions should not depend upon details.
Details should depend upon abstractions.

High level modules which provide complex logic should be easily reusable and unaffected by
the changes on the low level modules,which provide utility features.To provide that you need to 
introduce an abstraction that decouples the high-level and low-level modules from each other.

Based on this idea,Dependency inversion consists of two parts
1.This principle states that the high level module should not depend upon low level modules,
 they both should depend upon abstractions.
2.Abstractions should not depend upon details.Details should depend upon abstractions.

An important detail of this definition is that high level and low level modules depend upon abstraction.
The design principle doesnot just change the direction of dependency.It splits the dependency between 
the high level and low level modules by introducing an abstraction between them.So in the end we get two dependencies.

1.  High level module depend upon abstraction.
2.  Low level module depend upon same abstraction.